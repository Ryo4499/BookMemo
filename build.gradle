plugins {
  id 'org.springframework.boot' version '2.5.0'
  id 'io.spring.dependency-management' version '1.0.11.RELEASE'
  id "de.undercouch.download" version "3.4.3"
  id 'java'
  id 'war'
}

group = 'com.herokuapp.bookmemo4444'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'
targetCompatibility = '11'

configurations {
  compileOnly {
    extendsFrom annotationProcessor
  }
}

repositories {
  mavenCentral()
}

dependencies {
  implementation 'org.springframework.boot:spring-boot-starter-data-jdbc'
  implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
  implementation 'org.springframework.boot:spring-boot-starter-data-ldap'
  implementation 'org.springframework.boot:spring-boot-starter-jdbc'
  implementation 'org.springframework.boot:spring-boot-starter-security'
  implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
  implementation 'org.springframework.boot:spring-boot-starter-validation'
  implementation 'org.springframework.boot:spring-boot-starter-web'
  implementation 'org.springframework.session:spring-session-jdbc'
  implementation 'org.thymeleaf.extras:thymeleaf-extras-springsecurity5'
  compileOnly group: 'com.github.jsimone', name: 'webapp-runner', version: '9.0.27.1'
  compileOnly 'org.projectlombok:lombok'
  developmentOnly 'org.springframework.boot:spring-boot-devtools'
  runtimeOnly 'com.h2database:h2'
  runtimeOnly 'org.postgresql:postgresql'
  annotationProcessor 'org.projectlombok:lombok'
  providedRuntime 'org.springframework.boot:spring-boot-starter-tomcat'
  testImplementation 'org.springframework.boot:spring-boot-starter-test'
  testImplementation 'org.springframework.security:spring-security-test'
  testImplementation group: 'org.junit.jupiter', name: 'junit-jupiter-api', version: '5.7.0'
  testImplementation group: 'org.hamcrest', name: 'hamcrest-all', version: '1.3'
}

test {
  useJUnitPlatform()
}

task stage() {
    dependsOn clean, war
}
war.mustRunAfter clean

task copyToLib(type: Copy) {
    into "$buildDir/server"
    from(configurations.compile) {
        include "webapp-runner*"
    }
}

stage.dependsOn(copyToLib)

task downloadSqreen(type: Download) {
    src 'https://download.sqreen.com/java/sqreen.jar'
    dest "$buildDir/../sqreen.jar"
    onlyIfModified false
}

stage.dependsOn(downloadSqreen)

